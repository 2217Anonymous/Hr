"""
Django settings for corehr project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from logging import ERROR, WARNING
from pathlib import Path
import os
from sre_constants import SUCCESS
from telnetlib import AUTHENTICATION
from django.contrib.messages import constants as messages
from datetime import timedelta

BASE_DIR     = Path(__file__).resolve().parent.parent
BASE_DIR2    = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
TEMPLATE_DIR = os.path.join(BASE_DIR2,'templates')
STATIC_DIR   = os.path.join(BASE_DIR2,'static')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-y^dfew*+hkb19jk72+nfr$udao7x9u!y)#p100!v8hm$ln*bsh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# DATE_INPUT_FORMATS = ['%m-%d-%Y']

ALLOWED_HOSTS = []


# Application definition

DEFAULT_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_render_partial',
]

LOCAL_APPS = [
    'authentication.apps.AuthenticationConfig',
    'api.apps.ApiConfig',
    'master.apps.MasterConfig',
    'settings.apps.SettingsConfig',
    'employees.apps.EmployeesConfig',
]

THIRD_PARTY_APPS = [ 
    'rest_framework',
    # 'rest_framework_simplejwt',
    # 'rest_framework_simplejwt.token_blacklist',
    #'corsheaders',
    'django_extensions',
    #'dbbackup',
]

INSTALLED_APPS = DEFAULT_APPS + LOCAL_APPS + THIRD_PARTY_APPS

# DBBACKUP_STORAGE = 'django.core.files.storage.FileSystemStorage'
# DBBACKUP_STORAGE_OPTIONS = {'location': '/my/backup/dir/'}

MIDDLEWARE = [
    'django.middleware.gzip.GZipMiddleware',
    'htmlmin.middleware.HtmlMinifyMiddleware',
    'htmlmin.middleware.MarkRequestMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


# INTERNAL_IPS = [
#     # ...
#     "127.0.0.1",
#     # ...
# ]

ROOT_URLCONF = 'corehr.urls'
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'corehr.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'hr.sqlite3',
    },
    'hr': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'corehr.sqlite3',
    }
} 


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    STATIC_DIR,
]
MEDIA_ROOT  = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# DATE_INPUT_FORMATS = ['%d/%m/%Y']
AUTH_USER_MODEL = 'authentication.User'
LOGIN_REDIRECT_URL='login'
LOGOUT_REDIRECT_URL = 'login'

MESSAGE_TAGS = {
    messages.INFO       : 'info',
    messages.SUCCESS    : 'success',
    messages.WARNING    : 'warning',
    messages.ERROR      : 'error',
    messages.DEBUG      : 'debug',
}

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'mail.sortscript.in'
EMAIL_PORT = 587 
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'venkateshwaran@sortscript.in'
EMAIL_HOST_PASSWORD = '2217@Anonymous'

 # The default meta precedence order
IPWARE_META_PRECEDENCE_ORDER = (
    'HTTP_X_FORWARDED_FOR', 'X_FORWARDED_FOR',  # <client>, <proxy1>, <proxy2>
    'HTTP_CLIENT_IP',
    'HTTP_X_REAL_IP',
    'HTTP_X_FORWARDED',
    'HTTP_X_CLUSTER_CLIENT_IP',
    'HTTP_FORWARDED_FOR',
    'HTTP_FORWARDED',
    'HTTP_VIA',
    'REMOTE_ADDR',
 )

 # The default private IP prefixes
# IPWARE_PRIVATE_IP_PREFIX = getattr(settings,
#    'IPWARE_PRIVATE_IP_PREFIX', (
#      '0.',  # messages to software
#      '10.',  # class A private block
#      '100.64.',  '100.65.',  '100.66.',  '100.67.',  '100.68.',  '100.69.',
#      '100.70.',  '100.71.',  '100.72.',  '100.73.',  '100.74.',  '100.75.',
#      '100.76.',  '100.77.',  '100.78.',  '100.79.',  '100.80.',  '100.81.',
#      '100.82.',  '100.83.',  '100.84.',  '100.85.',  '100.86.',  '100.87.',
#      '100.88.',  '100.89.',  '100.90.',  '100.91.',  '100.92.',  '100.93.',
#      '100.94.',  '100.95.',  '100.96.',  '100.97.',  '100.98.',  '100.99.',
#      '100.100.', '100.101.', '100.102.', '100.103.', '100.104.', '100.105.',
#      '100.106.', '100.107.', '100.108.', '100.109.', '100.110.', '100.111.',
#      '100.112.', '100.113.', '100.114.', '100.115.', '100.116.', '100.117.',
#      '100.118.', '100.119.', '100.120.', '100.121.', '100.122.', '100.123.',
#      '100.124.', '100.125.', '100.126.', '100.127.',  # carrier-grade NAT
#      '169.254.',  # link-local block
#      '172.16.', '172.17.', '172.18.', '172.19.',
#      '172.20.', '172.21.', '172.22.', '172.23.',
#      '172.24.', '172.25.', '172.26.', '172.27.',
#      '172.28.', '172.29.', '172.30.', '172.31.',  # class B private blocks
#      '192.0.0.',  # reserved for IANA special purpose address registry
#      '192.0.2.',  # reserved for documentation and example code
#      '192.168.',  # class C private block
#      '198.18.', '198.19.',  # reserved for inter-network communications between two separate subnets
#      '198.51.100.',  # reserved for documentation and example code
#      '203.0.113.',  # reserved for documentation and example code
#      '224.', '225.', '226.', '227.', '228.', '229.', '230.', '231.', '232.',
#      '233.', '234.', '235.', '236.', '237.', '238.', '239.',  # multicast
#      '240.', '241.', '242.', '243.', '244.', '245.', '246.', '247.', '248.',
#      '249.', '250.', '251.', '252.', '253.', '254.', '255.',  # reserved
#    ) + (
#      '::',  # Unspecified address
#      '::ffff:', '2001:10:', '2001:20:'  # messages to software
#      '2001::',  # TEREDO
#      '2001:2::',  # benchmarking
#      '2001:db8:',  # reserved for documentation and example code
#      'fc00:',  # IPv6 private block
#      'fe80:',  # link-local unicast
#      'ff00:',  # IPv6 multicast
#    )
# )

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES'    : ('rest_framework.permissions.IsAdminUser',
                                       'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
                                       #'rest_framework.permissions.IsAuthenticatedOrReadOnly',
                                       #'rest_framework.permissions.AllowAny',
                                       ),
    'DEFAULT_PAGINATION_CLASS'      : 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE'                     : 5,
    # 'DEFAULT_AUTHENTICATION_CLASSES': [
    #     'rest_framework_simplejwt.authentication.JWTAuthentication',
    # ],
}

# SIMPLE_JWT = {
#     'ACCESS_TOKEN_LIFETIME': timedelta(minutes=1),
#     'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
#     'ROTATE_REFRESH_TOKENS': False,
#     'BLACKLIST_AFTER_ROTATION': False,
#     'UPDATE_LAST_LOGIN': True,

#     'ALGORITHM': 'HS256',
#     'SIGNING_KEY': SECRET_KEY,
#     'VERIFYING_KEY': None,
#     'AUDIENCE': None,
#     'ISSUER': None,
#     'JWK_URL': None,
#     'LEEWAY': 0,

#     'AUTH_HEADER_TYPES': ('Bearer',),
#     'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
#     'USER_ID_FIELD': 'id',
#     'USER_ID_CLAIM': 'user_id',
#     'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

#     'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
#     'TOKEN_TYPE_CLAIM': 'token_type',
#     'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',

#     'JTI_CLAIM': 'jti',

#     'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
#     'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
#     'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
# }